// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+i",
        "command": "composerMode.agent"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "ctrl+l",
        "command": "list.select",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.quickOpenPreviousEditor"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.showContextMenu"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "vim.mode == 'Visual'"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    /*  VSCode attempt to emulate https://github.com/terryma/vim-multiple-cursors */
    // Use built in VSCode pattern matcher for entire word search (ctrl + n)
    {
        "key": "ctrl+n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
    },
    // Skip current match (ctrl + x)
    {
        "key": "ctrl+x",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
    },
    // Go back to previous match (ctrl + p)
    {
        "key": "ctrl+p",
        "command": "editor.action.moveSelectionToPreviousFindMatch",
        "when": "vim.active && editorFocus && vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
    },
    // Select all matches (ctrl + a). This is effectively the same as (ctrl + shift + l)
    {
        "key": "ctrl+a",
        "command": "editor.action.selectHighlights",
        "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
    }
]